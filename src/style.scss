// do not remove width: 100% props (ae used for positioning reasons)

@keyframes beat {
  0% {
    transform: scale(0, 0);
  }
  50% {
    transform: scale(2, 2);
  }
  100% {
    transform: scale(0.85, 0.85);
  }
}
@keyframes simple {
  0% {
    transform: scale(0, 0);
  }
  100% {
    transform: scale(1.5, 1.5);
  }
}

%focus-effect {
  &:active,
  &:focus-visible,
  &:focus {
    outline: none;
    overflow: hidden;
    &::after {
      content: "";
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      margin-left: -50%;
      margin-top: -50%;
      width: 100%;
      padding-top: 100%;
      border-radius: 50%;
      transform: scale(0, 0);
      background-color: #fff5;
    }
  }
  &:focus-visible {
    &::after {
      animation: beat 1s ease-out infinite alternate !important;
    }
  }
  &:focus {
    &::after {
      animation: simple 0.3s cubic-bezier(0.55, 0.38, 0.67, 0.99) 1;
    }
  }
  &:active {
    &::after {
      animation: none;
    }
  }
}

%button {
  display: block;
  width: 48px;
  height: 48px;
  position: absolute;
  background: #0004;
  border: none;
  padding: 2px;
  fill: #fff;
  outline: none;
  cursor: pointer;
  @extend %focus-effect;
}

.Slidish__root {
  // for positioning controls, indicators, progressBar, ...
  position: relative;
  width: 100%;
  height: 100%;
  // for positioning slider center when the width option is set
  margin: auto;
  display: flex;
  // for letting slides fill full height excluding thumbs height using flex css property
  flex-direction: column;
  // to remove outline while focused because of tabIndex (for keyboard navigation to work only from inside the slider)
  outline: none;
  *,
  *::after,
  *::before {
    box-sizing: border-box;
  }
}
.Slidish__root--fullscreen {
  @extend .Slidish__root;
  position: fixed;
  top: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  z-index: 2147483647;
  height: 100% !important;
  background-color: #000;
}
.Slidish__close-button {
  display: none;
}
.Slidish__close-button--fullscreen {
  @extend %button;
  display: block;
  top: 0;
  right: 0;
  z-index: 2147483647;
}
.Slidish__slides-root {
  // for positioning slides` children
  position: relative;
  width: 100%;
  // to fill remaining height (excluding thumbs height)
  flex: 1;
  overflow: hidden;
}
.Slidish__slides-container {
  display: flex;
  height: 100%;
  width: 100%;
}
.Slidish__slide {
  display: flex;
  // to avoid fitting it's content's width
  width: 100%;
  height: 100%;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  user-select: none;
  & > img {
    max-width: 100%;
    max-height: 100%;
  }
}
.Slidish__next-button {
  @extend %button;
  top: 0;
  right: 0;
  height: 100%;
}
.Slidish__previous-button {
  @extend %button;
  top: 0;
  left: 0;
  height: 100%;
}
.Slidish__play-button {
  @extend %button;
  bottom: 0;
}
.Slidish__fullscreen-button {
  @extend %button;
  bottom: 0;
  right: 0;
}
.Slidish__index-indicator {
  position: absolute;
  top: 8px;
  left: 0;
  right: 0;
  padding: 5px 10px;
  width: fit-content;
  margin: auto;
  background-color: #0004;
  color: #fff;
  border-radius: 5px;
  user-select: none;
}
.Slidish__indicators-container {
  /* To avoid covering slide content (like YouTube controls) and disabling slide pointer-events*/
  pointer-events: none;
  position: absolute;
  bottom: 16px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  padding: 0 56px;
}
.Slidish__indicator {
  /* to allow pointer-events on indicators while it is disabled in indicators' container div */
  pointer-events: auto;
  display: inline-flex;
  margin: 4px;
  width: 12px;
  height: 12px;
  border: 2px solid #0007;
  background-color: #fff;
  border-radius: 8px;
  cursor: pointer;
  &:focus {
    outline: none;
  }
  &:focus-visible {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: -5px;
      left: -5px;
      border-radius: 50%;
      border: 3px solid #0009;
      width: 18px;
      height: 18px;
      animation: beat 1s ease-out infinite alternate;
    }
    &::after {
      content: "";
      position: absolute;
      top: -2px;
      left: -2px;
      border-radius: 50%;
      border: 3px solid #fff7;
      width: 12px;
      height: 12px;
      animation: beat 1s ease-out infinite alternate;
    }
  }
}
.Slidish__indicator--active {
  background-color: #000b;
  border-color: #fff9;
}
.Slidish__thumbs-root {
  height: 20%;
  width: 100%;
  padding: 8px 0;
  overflow: hidden;
}
.Slidish__thumbs-container {
  display: flex;
  height: 100%;
}
.Slidish__thumb {
  position: relative;
  @extend %focus-effect;
  // for centering small thumbs
  display: flex;
  align-items: center;
  justify-content: center;
  // to stop shrinking thumbs
  flex-shrink: 0;
  border: 1px solid #999;
  overflow: hidden;
  user-select: none;
  cursor: pointer;
  & > img {
    max-width: 100%;
    max-height: 100%;
  }
}
.Slidish__thumb--active {
  box-shadow: 2px 3px 8px #0009;
  border: 2px solid #07d;
}
.Slidish__progress-bar-container {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
}
.Slidish__progress-bar {
  background-color: #07d;
  height: 5px;
  width: 100%;
}
